"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeBrowserSchema = void 0;
const core_1 = require("@angular-devkit/core");
const normalize_asset_patterns_1 = require("./normalize-asset-patterns");
const normalize_cache_1 = require("./normalize-cache");
const normalize_file_replacements_1 = require("./normalize-file-replacements");
const normalize_optimization_1 = require("./normalize-optimization");
const normalize_source_maps_1 = require("./normalize-source-maps");
const supported_browsers_1 = require("./supported-browsers");
function normalizeBrowserSchema(root, projectRoot, sourceRoot, options, metadata) {
    const normalizedSourceMapOptions = (0, normalize_source_maps_1.normalizeSourceMaps)(options.sourceMap || false);
    return {
        ...options,
        cache: (0, normalize_cache_1.normalizeCacheOptions)(metadata, (0, core_1.getSystemPath)(root)),
        assets: (0, normalize_asset_patterns_1.normalizeAssetPatterns)(options.assets || [], root, projectRoot, sourceRoot),
        fileReplacements: (0, normalize_file_replacements_1.normalizeFileReplacements)(options.fileReplacements || [], root),
        optimization: (0, normalize_optimization_1.normalizeOptimization)(options.optimization),
        sourceMap: normalizedSourceMapOptions,
        preserveSymlinks: options.preserveSymlinks === undefined
            ? process.execArgv.includes('--preserve-symlinks')
            : options.preserveSymlinks,
        statsJson: options.statsJson || false,
        budgets: options.budgets || [],
        scripts: options.scripts || [],
        styles: options.styles || [],
        stylePreprocessorOptions: {
            includePaths: (options.stylePreprocessorOptions && options.stylePreprocessorOptions.includePaths) || [],
        },
        // Using just `--poll` will result in a value of 0 which is very likely not the intention
        // A value of 0 is falsy and will disable polling rather then enable
        // 500 ms is a sensible default in this case
        poll: options.poll === 0 ? 500 : options.poll,
        supportedBrowsers: (0, supported_browsers_1.getSupportedBrowsers)((0, core_1.getSystemPath)(projectRoot)),
    };
}
exports.normalizeBrowserSchema = normalizeBrowserSchema;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplLWJ1aWxkZXItc2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhcl9kZXZraXQvYnVpbGRfYW5ndWxhci9zcmMvdXRpbHMvbm9ybWFsaXplLWJ1aWxkZXItc2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7O0dBTUc7OztBQUVILCtDQUFpRTtBQU9qRSx5RUFBb0U7QUFDcEUsdURBQTBEO0FBQzFELCtFQUd1QztBQUN2QyxxRUFBZ0c7QUFDaEcsbUVBQThEO0FBQzlELDZEQUE0RDtBQWE1RCxTQUFnQixzQkFBc0IsQ0FDcEMsSUFBVSxFQUNWLFdBQWlCLEVBQ2pCLFVBQTRCLEVBQzVCLE9BQTZCLEVBQzdCLFFBQXlCO0lBRXpCLE1BQU0sMEJBQTBCLEdBQUcsSUFBQSwyQ0FBbUIsRUFBQyxPQUFPLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxDQUFDO0lBRW5GLE9BQU87UUFDTCxHQUFHLE9BQU87UUFDVixLQUFLLEVBQUUsSUFBQSx1Q0FBcUIsRUFBQyxRQUFRLEVBQUUsSUFBQSxvQkFBYSxFQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNELE1BQU0sRUFBRSxJQUFBLGlEQUFzQixFQUFDLE9BQU8sQ0FBQyxNQUFNLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDO1FBQ25GLGdCQUFnQixFQUFFLElBQUEsdURBQXlCLEVBQUMsT0FBTyxDQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUM7UUFDakYsWUFBWSxFQUFFLElBQUEsOENBQXFCLEVBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztRQUN6RCxTQUFTLEVBQUUsMEJBQTBCO1FBQ3JDLGdCQUFnQixFQUNkLE9BQU8sQ0FBQyxnQkFBZ0IsS0FBSyxTQUFTO1lBQ3BDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQztZQUNsRCxDQUFDLENBQUMsT0FBTyxDQUFDLGdCQUFnQjtRQUM5QixTQUFTLEVBQUUsT0FBTyxDQUFDLFNBQVMsSUFBSSxLQUFLO1FBQ3JDLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUU7UUFDOUIsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRTtRQUM5QixNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU0sSUFBSSxFQUFFO1FBQzVCLHdCQUF3QixFQUFFO1lBQ3hCLFlBQVksRUFDVixDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsSUFBSSxPQUFPLENBQUMsd0JBQXdCLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRTtTQUM1RjtRQUNELHlGQUF5RjtRQUN6RixvRUFBb0U7UUFDcEUsNENBQTRDO1FBQzVDLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSTtRQUM3QyxpQkFBaUIsRUFBRSxJQUFBLHlDQUFvQixFQUFDLElBQUEsb0JBQWEsRUFBQyxXQUFXLENBQUMsQ0FBQztLQUNwRSxDQUFDO0FBQ0osQ0FBQztBQWxDRCx3REFrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHsgUGF0aCwgZ2V0U3lzdGVtUGF0aCwganNvbiB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9jb3JlJztcbmltcG9ydCB7XG4gIEFzc2V0UGF0dGVybkNsYXNzLFxuICBTY2hlbWEgYXMgQnJvd3NlckJ1aWxkZXJTY2hlbWEsXG4gIFNvdXJjZU1hcENsYXNzLFxufSBmcm9tICcuLi9idWlsZGVycy9icm93c2VyL3NjaGVtYSc7XG5pbXBvcnQgeyBCdWlsZE9wdGlvbnMgfSBmcm9tICcuL2J1aWxkLW9wdGlvbnMnO1xuaW1wb3J0IHsgbm9ybWFsaXplQXNzZXRQYXR0ZXJucyB9IGZyb20gJy4vbm9ybWFsaXplLWFzc2V0LXBhdHRlcm5zJztcbmltcG9ydCB7IG5vcm1hbGl6ZUNhY2hlT3B0aW9ucyB9IGZyb20gJy4vbm9ybWFsaXplLWNhY2hlJztcbmltcG9ydCB7XG4gIE5vcm1hbGl6ZWRGaWxlUmVwbGFjZW1lbnQsXG4gIG5vcm1hbGl6ZUZpbGVSZXBsYWNlbWVudHMsXG59IGZyb20gJy4vbm9ybWFsaXplLWZpbGUtcmVwbGFjZW1lbnRzJztcbmltcG9ydCB7IE5vcm1hbGl6ZWRPcHRpbWl6YXRpb25PcHRpb25zLCBub3JtYWxpemVPcHRpbWl6YXRpb24gfSBmcm9tICcuL25vcm1hbGl6ZS1vcHRpbWl6YXRpb24nO1xuaW1wb3J0IHsgbm9ybWFsaXplU291cmNlTWFwcyB9IGZyb20gJy4vbm9ybWFsaXplLXNvdXJjZS1tYXBzJztcbmltcG9ydCB7IGdldFN1cHBvcnRlZEJyb3dzZXJzIH0gZnJvbSAnLi9zdXBwb3J0ZWQtYnJvd3NlcnMnO1xuXG4vKipcbiAqIEEgbm9ybWFsaXplZCBicm93c2VyIGJ1aWxkZXIgc2NoZW1hLlxuICovXG5leHBvcnQgdHlwZSBOb3JtYWxpemVkQnJvd3NlckJ1aWxkZXJTY2hlbWEgPSBCcm93c2VyQnVpbGRlclNjaGVtYSAmXG4gIEJ1aWxkT3B0aW9ucyAmIHtcbiAgICBzb3VyY2VNYXA6IFNvdXJjZU1hcENsYXNzO1xuICAgIGFzc2V0czogQXNzZXRQYXR0ZXJuQ2xhc3NbXTtcbiAgICBmaWxlUmVwbGFjZW1lbnRzOiBOb3JtYWxpemVkRmlsZVJlcGxhY2VtZW50W107XG4gICAgb3B0aW1pemF0aW9uOiBOb3JtYWxpemVkT3B0aW1pemF0aW9uT3B0aW9ucztcbiAgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUJyb3dzZXJTY2hlbWEoXG4gIHJvb3Q6IFBhdGgsXG4gIHByb2plY3RSb290OiBQYXRoLFxuICBzb3VyY2VSb290OiBQYXRoIHwgdW5kZWZpbmVkLFxuICBvcHRpb25zOiBCcm93c2VyQnVpbGRlclNjaGVtYSxcbiAgbWV0YWRhdGE6IGpzb24uSnNvbk9iamVjdCxcbik6IE5vcm1hbGl6ZWRCcm93c2VyQnVpbGRlclNjaGVtYSB7XG4gIGNvbnN0IG5vcm1hbGl6ZWRTb3VyY2VNYXBPcHRpb25zID0gbm9ybWFsaXplU291cmNlTWFwcyhvcHRpb25zLnNvdXJjZU1hcCB8fCBmYWxzZSk7XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIGNhY2hlOiBub3JtYWxpemVDYWNoZU9wdGlvbnMobWV0YWRhdGEsIGdldFN5c3RlbVBhdGgocm9vdCkpLFxuICAgIGFzc2V0czogbm9ybWFsaXplQXNzZXRQYXR0ZXJucyhvcHRpb25zLmFzc2V0cyB8fCBbXSwgcm9vdCwgcHJvamVjdFJvb3QsIHNvdXJjZVJvb3QpLFxuICAgIGZpbGVSZXBsYWNlbWVudHM6IG5vcm1hbGl6ZUZpbGVSZXBsYWNlbWVudHMob3B0aW9ucy5maWxlUmVwbGFjZW1lbnRzIHx8IFtdLCByb290KSxcbiAgICBvcHRpbWl6YXRpb246IG5vcm1hbGl6ZU9wdGltaXphdGlvbihvcHRpb25zLm9wdGltaXphdGlvbiksXG4gICAgc291cmNlTWFwOiBub3JtYWxpemVkU291cmNlTWFwT3B0aW9ucyxcbiAgICBwcmVzZXJ2ZVN5bWxpbmtzOlxuICAgICAgb3B0aW9ucy5wcmVzZXJ2ZVN5bWxpbmtzID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBwcm9jZXNzLmV4ZWNBcmd2LmluY2x1ZGVzKCctLXByZXNlcnZlLXN5bWxpbmtzJylcbiAgICAgICAgOiBvcHRpb25zLnByZXNlcnZlU3ltbGlua3MsXG4gICAgc3RhdHNKc29uOiBvcHRpb25zLnN0YXRzSnNvbiB8fCBmYWxzZSxcbiAgICBidWRnZXRzOiBvcHRpb25zLmJ1ZGdldHMgfHwgW10sXG4gICAgc2NyaXB0czogb3B0aW9ucy5zY3JpcHRzIHx8IFtdLFxuICAgIHN0eWxlczogb3B0aW9ucy5zdHlsZXMgfHwgW10sXG4gICAgc3R5bGVQcmVwcm9jZXNzb3JPcHRpb25zOiB7XG4gICAgICBpbmNsdWRlUGF0aHM6XG4gICAgICAgIChvcHRpb25zLnN0eWxlUHJlcHJvY2Vzc29yT3B0aW9ucyAmJiBvcHRpb25zLnN0eWxlUHJlcHJvY2Vzc29yT3B0aW9ucy5pbmNsdWRlUGF0aHMpIHx8IFtdLFxuICAgIH0sXG4gICAgLy8gVXNpbmcganVzdCBgLS1wb2xsYCB3aWxsIHJlc3VsdCBpbiBhIHZhbHVlIG9mIDAgd2hpY2ggaXMgdmVyeSBsaWtlbHkgbm90IHRoZSBpbnRlbnRpb25cbiAgICAvLyBBIHZhbHVlIG9mIDAgaXMgZmFsc3kgYW5kIHdpbGwgZGlzYWJsZSBwb2xsaW5nIHJhdGhlciB0aGVuIGVuYWJsZVxuICAgIC8vIDUwMCBtcyBpcyBhIHNlbnNpYmxlIGRlZmF1bHQgaW4gdGhpcyBjYXNlXG4gICAgcG9sbDogb3B0aW9ucy5wb2xsID09PSAwID8gNTAwIDogb3B0aW9ucy5wb2xsLFxuICAgIHN1cHBvcnRlZEJyb3dzZXJzOiBnZXRTdXBwb3J0ZWRCcm93c2VycyhnZXRTeXN0ZW1QYXRoKHByb2plY3RSb290KSksXG4gIH07XG59XG4iXX0=